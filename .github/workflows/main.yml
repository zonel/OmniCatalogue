name: Main Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install frontend dependencies
        working-directory: ./src/OmniCatalogue.Frontend
        run: npm install axios && npm install

      - name: Run ESLint
        working-directory: ./src/OmniCatalogue.Frontend
        run: npm run lint

      - name: Build frontend
        working-directory: ./src/OmniCatalogue.Frontend
        run: npm run build

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Install backend dependencies
        working-directory: ./src/OmniCatalogue.Backend
        run: dotnet restore

      - name: Build backend
        working-directory: ./src/OmniCatalogue.Backend
        run: dotnet build --configuration Release

      - name: Run backend tests
        working-directory: ./src/OmniCatalogue.Backend
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"
        
      - name: Run frontend tests
        working-directory: ./src/OmniCatalogue.Frontend
        run: npm test

      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload Frontend Release Artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: ./src/OmniCatalogue.Frontend/dist

      - name: Upload Backend Release Artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-build
          path: ./src/OmniCatalogue.Backend/bin/Release/net8.0/publish

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}"
          release_name: "Release v${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Frontend Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/OmniCatalogue.Frontend/dist
          asset_name: frontend_build.zip
          asset_content_type: application/zip

      - name: Upload Backend Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/OmniCatalogue.Backend/bin/Release/net8.0/publish
          asset_name: backend_build.zip
          asset_content_type: application/zip
